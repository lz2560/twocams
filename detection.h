#ifndef _DETECTION_H_
#define _DETECTION_H_

#include "opencv2/imgcodecs.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/videoio.hpp"
#include "opencv2/bgsegm.hpp"
#include "opencv2/features2d.hpp"
#include <opencv2/highgui.hpp>
#include <opencv2/video.hpp>

#include <stdio.h>
#include <iostream>
#include <sstream>

using namespace cv;
using namespace std;

#define SSTR( x ) static_cast< std::ostringstream & >( \
( std::ostringstream() << std::dec << x ) ).str()

class Detection {
	private:
		int keypointSizeThreshold;
		Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
		Ptr<SimpleBlobDetector> detector; // Set up the detector with default parameters
		Mat fgMaskMOG2; //fg mask fg mask generated by MOG2 method

	public:
		Detection(int keypointSizeThreshold);
		void detectionStep(Mat& frame, Point2f& center);
};

#endif
